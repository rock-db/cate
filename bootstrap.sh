#!/bin/sh

found=0
cmate_found=0

if cat Cmate.toml > /dev/null 2>&1; then
	printf "\x1b[32m>> \x1b[0mCmate.toml found in $(pwd)\n"
	cmate_found=1
fi

if [ "$cmate_found" -eq 0 ];then
	printf "Cmate.toml not found!\n"
	exit 1
fi


for i in gcc clang "zig cc"; do
	if command -v $i > /dev/null 2>&1; then
		printf "\x1b[32m>> \x1b[0mCompiler = $i (auto)\n"
		cat <<EOF > "Makefile"
# @generated by cmate bootstrap
PROJECT_NAMES := cmate
CC_cmate	:=$i
EOF
		found=1
		break
	fi
done


if [ "$found" -eq 0 ];then
	printf "\x1b[31mError:\x1b[0m No valid C compiler was found\n" >&2
	printf "\x1b[32mSupported C compilers: \x1b[0m'\x1b[33mgcc\x1b[0m' '\x1b[36mclang\x1b[0m' '\x1b[35mzig cc\x1b[0m'\n" >&2
	exit 1
fi

cat <<EOF >> "Makefile"
CFLAGS_cmate := -Wall -Wextra -std=c99
LDLIBS_cmate :=
LDFLAGS_cmate :=  -O2  -DDEBUG
SRCDIRS_cmate :=  cmate/src
INCLUDE_DIRS_cmate :=  cmate/include
EXTRA_SOURCES_cmate :=

EOF


cat ./cmate/template/Makefile >> "Makefile"
printf "Makefile generated\n"

